# If you don't use a category, you need to make sure there is no space after the "=" sign
# The time for the timer is specified in minutes, if you need only one generation, you can leave blank or put 0
Main.timer=
# Enter here the ip:port of the host that receives API requests, example - 192.168.0.111:7860. Unless specify a default 127.0.0.1:7860
RequestGenerate.ip=192.168.0.112:7860
# v Number of steps to generate, set one value, unless specify a default 20 steps
PromptCollect.steps=24
# v Width. Specify the width of the image, unless specify a default 500
PromptCollect.width=960
# v Height. Specify the height of the image, unless specify a default 500
PromptCollect.height=1536
# v Specify the name of one sampler, for example Euler a or DPM2 or else. Unless specify a default Euler a
PromptCollect.sampler=Euler a
# v This parameter affects whether images are saved on the host, values of true or false are accepted. Default true
PromptCollect.saveImage=true
# Tags should be separated by commas (the exception is the lora category, it should be filled in with a space)
# Example of filling in the categories: beautiful, tree, mountain,
# Example for lora: <lora:mimic: <lora:bear: <lora:lava:
# v Generated object. One tag is selected randomly
PromptCollect.object=tree,rabbit, vine
# v Each tag can be used with a 1/5 chance
PromptCollect.random= beautiful, mountain
# v All text are applied without modification
PromptCollect.fixed= super detailed, masterpiece, hd
# v Negative Prompt. All text are applied without modification
PromptCollect.negative=
# v One tag selected randomly
PromptCollect.clothing=
# v Each tag has a 1/7 chance of being used
PromptCollect.emotion=
# v One tag has a 2/5 chance of being used
PromptCollect.pose=
# v Lora, one tag is selected, the entry format is <lora:name: , use space it out. Weights are not given because they are randomized from 0.8 to 1
PromptCollect.lora=
